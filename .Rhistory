ggplot(aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY)))
g_pct_chg
g_pct_chg <- ggplotly(ICO_PCT_CHG %>%
filter(YEAR > 2010) %>%
ggplot(aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY))) +
labs(
title = 'CHANGES IN TOTAL PRODUCTION AND DOMESTIC CONSUMPTION (1990-2017)',
x = 'TOTAL PRODUCTION',
y = 'DOMESTIC CONSUMPTION'
)
g_pct_chg <- ggplotly(ICO_PCT_CHG %>%
filter(YEAR > 2010) %>%
ggplot(aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY))) +
xlab("Time of day") + ylab("Total bill") + # Set axis labels
ggtitle("Average bill for 2 people")
ICO_PCT_CHG %>%
filter(YEAR > 2010)
ICO_PCT_CHG <- ICO_PCT_CHG %>%
filter(YEAR > 2010)
g_pct_chg <- ggplotly(ICO_PCT_CHG, (aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY))) +
xlab("Time of day") + ylab("Total bill") + # Set axis labels
ggtitle("Average bill for 2 people")
g_pct_chg
ggplot(ICO_PCT_CHG, aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY))
ggplot(ICO_PCT_CHG, aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY)) +
theme_light() +
guides(size = FALSE) +
labs(
title = 'PERCENTAGE (%) CHANGES IN TOTAL PRODUCTION (2010-2017)',
x = 'YEAR',
y = ' % Change in TOTAL PRODUCTION'
) +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"),
legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.key.size = unit(0.5, 'cm'))
g_pct_chg <- ggplot(ICO_PCT_CHG, aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY)) +
theme_light() +
guides(size = FALSE) +
labs(
title = 'PERCENTAGE (%) CHANGES IN TOTAL PRODUCTION (2010-2017)',
x = 'YEAR',
y = ' % Change in TOTAL PRODUCTION'
) +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"),
legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.key.size = unit(0.5, 'cm'))
g_pct_chg
ggplotly(g_pct_chg)
p_chg_prod <- ggplotly(g_pct_chg)
p_chg_prod
g_pct_chg <- ggplot(ICO_PCT_CHG, aes(x = YEAR, y = pct_change)) +
geom_line(aes(col = COUNTRY)) +
theme_light() +
guides(size = FALSE) +
labs(
title = 'PERCENTAGE (%) CHANGES IN TOTAL PRODUCTION (2010-2017)',
x = 'YEAR',
y = ' % Change in TOTAL PRODUCTION'
) +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"),
legend.title = element_text(size=10,
face="bold"),
legend.text = element_text(size=10,
face="bold"),
legend.key.size = unit(0.5, 'cm'))
p_chg_prod <- ggplotly(g_pct_chg)
runApp('Shiny_Project/ICO')
p_chg_prod
p_chg_prod
runApp('Shiny_Project/ICO')
Sys.setenv("plotly_username"="Venkata22v")
Sys.setenv("plotly_api_key"="sNZw7dyTP26eiMdnWrJK")
R.home(component = "home")
api_create(p_chg_prod, filename = "r-ico-pct-chg-prod")
path.expand("~")
getwd()
R.home()
file.edit(file.path("~", ".Rprofile")) # edit .Rprofile in HOME
file.edit(".Rprofile") # edit project specific .Rprofile
Sys.setenv("plotly_username"="Venkata22v")
Sys.setenv("plotly_api_key"="sNZw7dyTP26eiMdnWrJK")
Sys.setenv("plotly_domain"="https://plotly/~venkata22v/1/#/")
chart_link = plotly_POST(p_chg_prod, filename = "r-ico-pct-chg-prod")
api_create(p_chg_prod, filename = "r-ico-pct-chg-prod")
p_chg_prod <- ggplotly(g_pct_chg)
p_chg_prod
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
output$trend <- renderPlot(
data = ICO_Top_PROD %>%
filter(YEAR == input$years),
g_trend <- ggplot(data, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(aes(col = COUNTRY, size = TOTAL_PRODUCTION)) +
theme_light() +
guides(size = FALSE) +
labs(
title = 'CHANGES IN TOTAL PRODUCTION AND DOMESTIC CONSUMPTION (1990-2017)',
x = 'TOTAL PRODUCTION',
y = 'DOMESTIC CONSUMPTION'
) +
theme(plot.title = element_text(size=16,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=14,
face="bold"),
axis.title.y = element_text(size=14,
face="bold"),
legend.title = element_text(size=14,
face="bold"),
legend.text = element_text(size=12,
face="bold"),
legend.key.size = unit(0.7, 'cm'))
)
runApp('Shiny_Project/ICO')
runApp()
runApp('Shiny_Project/ICO')
p_prod_cons <- ggplotly(g_trend <- ggplot(data, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(aes(col = COUNTRY, size = TOTAL_PRODUCTION)) +
theme_light() +
guides(size = FALSE) +
labs(
title = 'CHANGES IN TOTAL PRODUCTION AND DOMESTIC CONSUMPTION (1990-2017)',
x = 'TOTAL PRODUCTION',
y = 'DOMESTIC CONSUMPTION'
) +
theme(plot.title = element_text(size=16,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=14,
face="bold"),
axis.title.y = element_text(size=14,
face="bold"),
legend.title = element_text(size=14,
face="bold"),
legend.text = element_text(size=12,
face="bold"),
legend.key.size = unit(0.7, 'cm')))
runApp()
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
g_fall <- ggplot(ICO_by_October, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'blue') +
geom_smooth() +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Fall (October)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"))
g_fall
g_fall <- ggplot(ICO_by_October, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'blue') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Fall (October)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"))
g_fall
g_summer <- ggplot(ICO_by_July, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'orange') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Summer (July)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"))
g_summer
g_spring <-  ggplot(ICO_by_April, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'lightgreen') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Spring (April)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=11,
face="bold"),
axis.title.y = element_text(size=11,
face="bold"))
g_spring
g_fall <- ggplot(ICO_by_October, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'blue') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Fall (October)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=12,
face="bold"),
axis.title.y = element_text(size=12,
face="bold"))
g_summer <- ggplot(ICO_by_July, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'orange') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Summer (July)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=12,
face="bold"),
axis.title.y = element_text(size=12,
face="bold"))
g_spring <-  ggplot(ICO_by_April, aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
geom_point(col = 'lightgreen') +
xlab('Total Production') +
ylab('Domestic Consumption') +
ggtitle('Spring (April)') +
theme_light() +
theme(plot.title = element_text(size=14,
face="bold", hjust = 0.5),
axis.title.x = element_text(size=12,
face="bold"),
axis.title.y = element_text(size=12,
face="bold"))
runApp('Shiny_Project/ICO')
library(plotly)
library(gapminder)
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
head(gapminder)
runApp('Shiny_Project/ICO')
output$trend <- renderPlotly(
# ggplotly(g_trend <- ICO_Top_PROD %>%
#              filter(YEAR == input$years) %>%
#              ggplot(aes(x = TOTAL_PRODUCTION, y = DOMESTIC_CONSUMPTION)) +
#     geom_point(aes(col = COUNTRY, size = TOTAL_PRODUCTION)) +
#     theme_light() +
#     guides(size = FALSE) +
#     labs(
#         title = 'CHANGES IN TOTAL PRODUCTION AND DOMESTIC CONSUMPTION (1990-2017)',
#         x = 'TOTAL PRODUCTION',
#         y = 'DOMESTIC CONSUMPTION'
#     ) +
#     theme(plot.title = element_text(size=16,
#                                     face="bold", hjust = 0.5),
#           axis.title.x = element_text(size=14,
#                                       face="bold"),
#           axis.title.y = element_text(size=14,
#                                       face="bold"),
#           legend.title = element_text(size=14,
#                                       face="bold"),
#           legend.text = element_text(size=12,
#                                      face="bold"),
#           legend.key.size = unit(0.7, 'cm')))
ICO_Top_PROD %>%
filter(YEAR == input$years) %>%
plot_ly(
x = ~TOTAL_PRODUCTION,
y = ~DOMESTIC_CONSUMPTION,
size = ~TOTAL_PRODUCTION,
color = ~COUNTRY,
frame = ~YEAR,
text = ~COUNTRY,
hoverinfo = "text",
type = 'scatter',
mode = 'markers',
colors = 'Set3'
)
)
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
g_fall
g_1_1
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
dashboardPage(
dashboardHeader(title = 'ICO - Coffee Stats'),
dashboardSidebar(
sidebarUserPanel('Venkata Vemanedi'),
sidebarMenu(
menuItem("Coffee Crop", tabName = "home", icon = icon("info")),
menuItem(" World's Top 5", tabName = "top_5", icon = icon("chart-bar")),
menuItem(" % Change in Prod", tabName = "chg_prod", icon = icon("chart-line")),
menuItem(" Trend Over Years", tabName = "trend", icon = icon("chart-bar")),
menuItem(" Crop by Seasons", tabName = "corr", icon = icon("chart-line")),
menuItem("Data", tabName = "data", icon = icon("database")))
),
dashboardBody(
tabItems(
# First Tab
tabItem(tabName = "home",
h1("International Coffee Organization (ICO) Coffee Production & Consumption")
,img(src="1.JPG",  width="88%"),
fluidRow(box(tags$h5(tags$b('This is a historical dataset summarising annual reports
gathered by International Coffee Organisation for 56 member
state countries from 1990 to 2017. ICO is the main
intergovernmental organisation for coffee market, representing
almost entire coffee production market and two-thirds of
coffee consumption.')),
tags$h4(tags$b('Problem Statement')),
tags$h5(tags$b('In the recent years, with the Coffee Rust threatening Latin
American crop, the need to identify altenrate crop markets for
the retailers arises.')), width = 100))
),
# Second Tab
tabItem(tabName = "top_5",
fluidRow(
box(plotlyOutput("top5_1", height = 500)),
box(plotlyOutput("top5_2", height = 500))),
fluidRow(box(tags$h5(tags$b("The above graphs depict the Domestic Consumption and Total Production
of the 'Top 5' countries in the recent years. Brazil is the leading
country in both production and consumption of the coffee crop.
Vietnam is the next big producer of the crop after Brazil.")),
width = 100)
)),
# Third Tab
tabItem(tabName = "chg_prod",
fluidRow(
box(plotlyOutput("chg_prod", height = 500, width = 1150))
),
fluidRow(
box(tags$h5(tags$b("The above graph shows the percentage changes in the 'Total Production'
of the crop in the member countries whose median total production
greater than 3 million bags per year in recent years which helps in
identifying the emerging markets.")),
tags$h5(tags$b('Based on the oberservation of the above graph:')),
tags$h5(tags$b('- Vietnam and India are identified as the
emerging crop markets with a percentage increase of
15% and 12% respectively.')),
width = 500)
)),
# Fourth Tab
tabItem(tabName = "trend",
fluidRow(
box(plotlyOutput('trend', height = 450, width = 1150))
),
fluidRow(
box(sliderInput("years", " Year",
min = 1990, max = 2017,
value = 1990, step = 1,
animate = TRUE)),
box(tags$h5(tags$b('The graph shows the trend of Production and Consumption
of the member countries over the years 1990 to 2017,
which had a median total production greater than 3 million
bags per year since 1990.')))
)
),
# Fifth Tab
tabItem(tabName = "corr",
fluidRow(
box(plotlyOutput("spring", height = 350)),
box(plotlyOutput("summer", height = 350)),
box(plotlyOutput("fall", height = 350)),
box(tags$h5(tags$b('Correlation for Spring (April) group of countries:  0.9852523')),
tags$h5(tags$b('Correlation for Summer (July) group of countries:  0.06980663')),
tags$h5(tags$b('Correlation for Fall (October) group of countries:  0.5823859')))
)
),
# Sixth Tab
tabItem(tabName = "data",
fluidPage(
titlePanel("Basic DataTable"),
# Create a new Row in the UI for selectInputs
fluidRow(
column(4,
selectInput("country",
"Country:",
c("All",
unique(as.character(ICO_1$COUNTRY))))
),
column(4,
selectInput("year",
"Year:",
c("All",
unique(as.character(ICO_1$YEAR))))
),
column(4,
selectInput("month",
"Month:",
c("All",
unique(as.character(ICO_1$MONTH))))
)
),
# Create a new row for the table.
DTOutput("table"),
tags$h4(tags$b('Content')),
tags$h5(tags$b('This dataset summarises four annual reports submitted by
the Member states of ICO from 1990 to 2017. By the end of
each crop year, a member state reports on Total Production,
Domestic Consumption, Exportable production and
Gross Opening Stocks. The values represent thousand 60 kg bags
of green coffee.')),
tags$h5(tags$b('The columns in this dataset represent:')),
tags$h5(tags$b('1. COUNTRY - Member state of ICO; there are 56 countries in this dataset')),
tags$h5(tags$b('2. YEAR - Crop year for which the data was collected')),
tags$h5(tags$b('3. MONTH - Month of crop harvest')),
tags$h5(tags$b('4. TOTAL_PRODUCTION - total coffee production in a member state per year')),
tags$h5(tags$b('5. DOMESTIC_CONSUMPTION - coffee consumption in a member state per year')),
tags$h5(tags$b('6. PCT_CONSUMPTION - percent of coffee consumed in a member state per year'))
)
)
)
)
)
runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='venkat-ds', token='CC86AB76CCB116A2E267885B45735CED', secret='Q2/rDTZ2rRn9W5rK/2PHY2URFYdiKDxKzgKmH0Pd')
shiny::runApp('Shiny_Project/ICO')
runApp('Shiny_Project/ICO')
rsconnect::setAccountInfo(name='venkat-ds',
token='CC86AB76CCB116A2E267885B45735CED',
secret='<SECRET>')
rsconnect::setAccountInfo(name='venkat-ds', token='CC86AB76CCB116A2E267885B45735CED', secret='Q2/rDTZ2rRn9W5rK/2PHY2URFYdiKDxKzgKmH0Pd')
library(rsconnect)
rsconnect::deployApp('~/Desktop/Boot_Camp/R/Shiny_Project/ICO')
Y
y
runApp('Shiny_Project/ICO')
rsconnect::deployApp('~/Desktop/Boot_Camp/R/Shiny_Project/ICO/')
getwd()
setwd("~/Desktop/Boot_Camp/R/Shiny_Project/ICO")
getwd()
rsconnect::deployApp('~/Desktop/Boot_Camp/R/Shiny_Project/ICO/')
y
runApp()
runApp()
runApp()
View(ICO_1)
View(ICO_1)
View(ICO_1)
View(ICO_1)
View(ICO_1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ICO_1 %>%
group_by(COUNTRY) %>%
summarise(MED_PROD = median(TOTAL_PRODUCTION)) %>%
filter(MED_PROD >= 3000)
ICO_1 %>%
group_by(COUNTRY) %>%
summarise(MED_PROD = median(TOTAL_PRODUCTION)) %>%
filter(MED_PROD >= 3000)
runApp()
ICO_PCT_CHG
runApp()
library(quantmod)
library(TTR)
getSymbols('^GSPC', src='yahoo')
View(GSPC)
runApp()
shiny::runApp()
runApp()
